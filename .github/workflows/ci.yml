name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Setup uv + cache
      - uses: astral-sh/setup-uv@v5
      - name: Set up Python venv
        run: uv venv .venv
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Ruff lint
        run: uv run ruff check .
      - name: Ruff format
        run: uv run ruff format --diff .

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
      - name: Set up Python venv
        run: uv venv .venv
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Run tests
        run: uv run pytest

  docs:
    name: Build and Deploy Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
      - name: Set up Python venv
        run: uv venv .venv
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install docs dependencies
        run: uv pip install sphinx myst-parser furo # add your extras

      - name: Build docs
        run: uv run sphinx-build -b html docs/ docs/_build/html

      - name: Deploy docs
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
